// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User who can access the admin dashboard
model User {
  id        String     @id @default(cuid())
  email     String     @unique
  username  String     @unique // To store the HRMS id_ field
  password  String?    // Optional as we use external auth
  name      String
  sbu       String?    // SBU selected during onboarding
  role      Role       @default(AGENT)
  status    Status     @default(PENDING)
  campaigns Campaign[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  lastLogin DateTime?

  @@map("users")
}

// Campaign for a specific company or use case
model Campaign {
  id                String   @id @default(cuid())
  campaign_name     String
  organization_name String
  uniqueLink        String   @unique
  leads             Lead[]
  is_active         Boolean  @default(true)
  lead_count        Int      @default(0)
  click_count       Int      @default(0)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  createdBy         User     @relation(fields: [createdById], references: [id])
  createdById       String

  @@map("campaigns")
}

// A captured lead from a client
model Lead {
  id             String         @id @default(cuid())
  fullName       String
  phoneNumber    String
  businessSector Sector         @relation(fields: [sectorId], references: [id])
  sectorId       String
  products       Product[]
  campaign       Campaign?      @relation(fields: [campaignId], references: [id])
  campaignId     String?
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt

  @@map("leads")
}

// Parent Product Category
model ProductCategory {
  id          String    @id @default(cuid())
  name        String    @unique
  description String?
  products    Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("product_categories")
}

// A list of available products (sub-products)
model Product {
  id              String         @id @default(cuid())
  name            String
  description     String?
  category        ProductCategory @relation(fields: [categoryId], references: [id])
  categoryId      String
  leads           Lead[]
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt

  @@map("products")
}

// Business sectors for the dropdown
model Sector {
  id        String   @id @default(cuid())
  name      String
  leads     Lead[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("sectors")
}

// User roles for authorization
enum Role {
  ADMIN
  BSS
  INFOSEC
  AGENT
  SUPERVISOR
  TEAMLEADER
}

// User status for account management
enum Status {
  PENDING
  ACTIVE
  INACTIVE
}
